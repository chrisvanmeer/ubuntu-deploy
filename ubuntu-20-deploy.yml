---
- name: "Ubuntu 20.04 LTS Deployment"
  hosts: all
  become: true

  vars:
    # Major Ubuntu version to check against
    _ubuntu_major_version: 20

    # Apache variables
    apache_listen_ip: "127.0.0.1"
    apache_listen_port: 80
    apache_listen_port_ssl: 443

    # PHP variables
    php_version: "8.1"
    php_packages:
      - "php{{ php_version }}"
      - "php{{ php_version }}-cli"
      - "libapache2-mod-php{{ php_version }}"
    php_enable_apc: false

    # NTP variables
    ntp_timezone: "Europe/Amsterdam"

    # Security variables
    security_ssh_port: 22
    ufw_rules:
      - rule: allow
        to_port: "{{ security_ssh_port }}"
        protocol: tcp
        comment: "Allow incoming SSH"

    # External PPA's
    ppa_repos:
      - "ppa:agornostal/ulauncher"

    # HashiCorp product selection
    hashicorp_product_selection:
      - boundary
      - consul
      - nomad
      - packer
      - terraform
      - waypoint
      - vagrant
      - vault

    # Variables for copy jobs
    home_path: "~"

    # Package variables
    xtra_apt_packages:
      - alpine
      - ansible-lint
      - apticron
      - atop
      - bsdgames
      - build-essential
      - certbot
      - curl
      - ddgr
      - flameshot
      - fonts-powerline
      - git
      - gimp
      - gitsome
      - gnome-tweak-tool
      - google-chrome-stable
      - googler
      - htop
      - iperf3
      - less
      - lynx
      - mailutils
      - mc
      - mlocate
      - multitail
      - nano
      - neofetch
      - net-tools
      - nload
      - screen
      - telnet
      - terraform
      - tilix
      - tmux
      - tree
      - ulauncher
      - vault
      - vim
      - virtualbox
      - virtualbox-ext-pack
      - vlc
      - wget
      - whois
      - yamllint
    xtra_snap_packages:
      - beekeeper-studio
      - bpytop
      - irccloud
      - mattermost-desktop
      - multipass
      - remmina
      - simplenote
      - telegram-desktop
    xtra_classic_snap_packages:
      - code
      - sublime-text

  pre_tasks:
    - name: "chrisvanmeer.check : Fail when Linux distribution does not match."
      fail:
        msg: "Failed, this is not Ubuntu 20...but {{ ansible_distribution }} {{ ansible_distribution_major_version }}."
      when: (ansible_distribution != "Ubuntu") or (ansible_distribution_major_version|int != _ubuntu_major_version|int)
      tags: check

    - name: "chrisvanmeer.fact : Set a fact with the current user name."
      become: false
      set_fact:
        docker_users: "{{ ansible_env.SUDO_USER or ansible_user_id }}"
        current_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"
      tags: fact, zsh, docker, core

  roles:
    - role: geerlingguy.certbot
      tags: certbot, core, roles
    - role: geerlingguy.apache
      tags: apache, core, roles
    - role: geerlingguy.php-versions
      tags: php, core, roles
    - role: geerlingguy.php-mysql
      tags: php, core, roles
    - role: geerlingguy.mysql
      tags: mysql, core, roles
    - role: geerlingguy.docker
      tags: docker, core, roles
    - role: geerlingguy.postfix
      tags: postfix, core, roles
    - role: geerlingguy.security
      tags: security, core, roles
    - role: geerlingguy.ntp
      tags: ntp, core, roles
    - role: oefenweb.ufw
      tags: ufw, core, roles
    - role: diodonfrost.vagrant
      tags: vagrant, core, roles
    - role: chrisvanmeer.dotfiles
      tags: dotfiles, core, roles
    - role: chrisvanmeer.hashicorp
      tags: hashicorp, core, roles

  tasks:
    - name: "chrisvanmeer.openssh : Ensure openssh-server is installed."
      apt:
        name:
          - openssh-server
          - openssh-client
        state: present
      tags: openssh, core

    - name: "chrisvanmeer.openssh : Ensure openssh-server is started and enabled."
      service:
        name: ssh
        state: started
        enabled: yes
      tags: openssh, core

    - name: "chrisvanmeer.zsh : Ensure zsh is installed."
      apt:
        name: zsh
        state: present
      tags: zsh, core

    - name: "chrisvanmeer.zsh : Ensure oh-my-zsh is installed."
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh
        dest: ~/.oh-my-zsh
      become: false
      tags: zsh, core

    - name: "chrisvanmeer.zsh : Ensure zsh-history-substring-search plugin is installed."
      git:
        repo: https://github.com/zsh-users/zsh-history-substring-search
        dest: ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
      become: false
      tags: zsh, core

    - name: "chrisvanmeer.zsh : Ensure zsh-autosuggestions plugin is installed."
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      become: false
      tags: zsh, core

    - name: "chrisvanmeer.zsh : Ensure zsh-syntax-highlighting plugin is installed."
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "~/zsh-syntax-highlighting"
      become: false
      tags: zsh, core

    - name: "chrisvanmeer.zsh : Get zsh path."
      command: which zsh
      register: zsh_path
      become: false
      changed_when: false
      tags: zsh, core

    - name: "chrisvanmeer.zsh : Switch shell of current user to zsh."
      user:
        name: "{{ current_user }}"
        shell: "{{ zsh_path.stdout }}"
      tags: zsh, core

    - name: "Check if indentLine plugin is installed."
      stat:
        path: "{{ home_path }}/.vim/pack/vendor/start/indentLine"
      become: false
      register: identline
      tags: vim, core

    - name: "Clone indentLine repo if identLine is not installed."
      git:
        repo: https://github.com/Yggdroot/indentLine.git
        dest: "{{ home_path }}/.vim/pack/vendor/start/indentLine"
      become: false
      when: not identline.stat.exists
      tags: vim, core

    - name: "Register identLine plugin if identLine is not installed."
      command: 'vim -u NONE -c "helptags {{ home_path }}/.vim/pack/vendor/start/indentLine/doc" -c "q"'
      become: false
      when: not identline.stat.exists
      tags: vim, core

    - name: "chrisvanmeer.yaml : Ensure yamllint configuration directory is in place."
      file:
        path: "{{ home_path }}/.config/yamllint"
        state: directory
      become: false
      tags: yaml, core

    - name: "chrisvanmeer.yaml : Ensure yamllint configuration is in place."
      copy:
        dest: "{{ home_path }}/.config/yamllint/config"
        content: |
          extends: relaxed
          rules:
            line-length: disable
      become: false
      tags: yaml, core

    - name: "chrisvanmeer.php-post : Remove standard index.html."
      file:
        path: /var/www/html/index.html
        state: absent
      tags: php-post, core

    - name: "chrisvanmeer.php-post : Create Hello World PHP page."
      copy:
        dest: /var/www/html/index.php
        content: |
          <?php
            echo 'Hello World!';
          ?>
      tags: php-post, core

    - name: "chrisvanmeer.apt-pre : Add needed PPA's."
      apt_repository:
        repo: "{{ item }}"
        state: present
      loop: "{{ ppa_repos }}"
      tags: apt-pre

    - name: "chrisvanmeer.chrome: Ensure that Google signing key is present."
      apt_key:
        url: https://dl-ssl.google.com/linux/linux_signing_key.pub
        state: present
      tags: chrome

    - name: "chrisvanmeer.chrome : Ensure Google Chrome repository is present."
      apt_repository:
        repo: "deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main"
        state: present
        filename: google-chrome
      tags: chrome

    - name: "chrisvanmeer.xtra : Update apt cache."
      apt:
        update_cache: yes
        cache_valid_time: 3600
      tags: xtra

    - name: "chrisvanmeer.xtra : Install the extra apt packages."
      apt:
        name: "{{ xtra_apt_packages }}"
        state: present
      tags: xtra

    - name: "chrisvanmeer.xtra : Install the extra snap packages."
      snap:
        name: "{{ xtra_snap_packages }}"
        classic: yes
        state: present
      tags: xtra, snap

    - name: "chrisvanmeer.xtra : Install the extra snap packages with classic parameter."
      snap:
        name: "{{ xtra_classic_snap_packages }}"
        classic: yes
        state: present
      tags: xtra, snap-classic

    - name: "chrisvanmeer.apt-post : Upgrade all apt packages."
      apt:
        upgrade: dist
        update_cache: yes
      tags: apt-post

    - name: "chrisvanmeer.apt-post : Autoremove unused apt packages."
      apt:
        autoremove: yes
      tags: apt-post

    - name: "chrisvanmeer.apt-post : Autoclean apt."
      apt:
        autoclean: yes
      tags: apt-post

    - name: "chrisvanmeer.post : Check if a reboot is needed."
      register: reboot_required_file
      stat:
        path: /var/run/reboot-required
      tags: post

  post_tasks:
    - name: "chrisvanmeer.post : Reboot warning if needed."
      debug:
        msg: "Please reboot your system"
      when: reboot_required_file.stat.exists
      tags: post
